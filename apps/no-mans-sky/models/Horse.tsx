/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import * as React, { useRef } from "solid-js";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { useCharacterController } from "./Cow";
import mergeRefs from "react-merge-refs";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.SkinnedMesh;
    Cube_1: THREE.SkinnedMesh;
    Cube_2: THREE.SkinnedMesh;
    Cube_3: THREE.SkinnedMesh;
    Cube_4: THREE.SkinnedMesh;
    Cube_5: THREE.SkinnedMesh;
    Cube_6: THREE.SkinnedMesh;
    Cube_7: THREE.SkinnedMesh;
    Body: THREE.Bone;
    IKBackLegL: THREE.Bone;
    IKFrontLegL: THREE.Bone;
    IKBackLegR: THREE.Bone;
    IKFrontLegR: THREE.Bone;
  };
  materials: {
    Main: THREE.MeshStandardMaterial;
    Main_Dark: THREE.MeshStandardMaterial;
    Main_Light: THREE.MeshStandardMaterial;
    Hooves: THREE.MeshStandardMaterial;
    Hair: THREE.MeshStandardMaterial;
    Muzzle: THREE.MeshStandardMaterial;
    Eye_White: THREE.MeshStandardMaterial;
    Eye_Black: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "Attack_Headbutt"
  | "Attack_Kick"
  | "Death"
  | "Eating"
  | "Gallop"
  | "Gallop_Jump"
  | "Idle"
  | "Idle_2"
  | "Idle_Headlow"
  | "Idle_HitReact_Left"
  | "Idle_HitReact_Right"
  | "Jump_toIdle"
  | "Walk";

interface GLTFActions extends THREE.AnimationClip {
  name: ActionName;
}

export const Horse = React.forwardRef(function Horse(
  props: JSX.IntrinsicElements["group"],
  ref
) {
  const group = useRef<THREE.Group>();
  let [characterRef, setCharacterRef] = React.useState<THREE.Group>();

  const { nodes, materials, animations } = useGLTF(
    "/animals/Horse.gltf"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations as any, group);

  useCharacterController(characterRef!, actions);
  return (
    <group
      ref={mergeRefs([group, setCharacterRef, ref])}
      rotation={[0, Math.PI, 0]}
      {...props}
      dispose={null}
    >
      <group name="Scene">
        <group name="AnimalArmature" userData={{ name: "AnimalArmature" }}>
          <primitive object={nodes.Body} />
          <primitive object={nodes.IKBackLegL} />
          <primitive object={nodes.IKFrontLegL} />
          <primitive object={nodes.IKBackLegR} />
          <primitive object={nodes.IKFrontLegR} />
          <group name="Horse" userData={{ name: "Horse" }}>
            <skinnedMesh
              name="Cube"
              geometry={nodes.Cube.geometry}
              material={materials.Main}
              skeleton={nodes.Cube.skeleton}
            />
            <skinnedMesh
              name="Cube_1"
              geometry={nodes.Cube_1.geometry}
              material={materials.Main_Dark}
              skeleton={nodes.Cube_1.skeleton}
            />
            <skinnedMesh
              name="Cube_2"
              geometry={nodes.Cube_2.geometry}
              material={materials.Main_Light}
              skeleton={nodes.Cube_2.skeleton}
            />
            <skinnedMesh
              name="Cube_3"
              geometry={nodes.Cube_3.geometry}
              material={materials.Hooves}
              skeleton={nodes.Cube_3.skeleton}
            />
            <skinnedMesh
              name="Cube_4"
              geometry={nodes.Cube_4.geometry}
              material={materials.Hair}
              skeleton={nodes.Cube_4.skeleton}
            />
            <skinnedMesh
              name="Cube_5"
              geometry={nodes.Cube_5.geometry}
              material={materials.Muzzle}
              skeleton={nodes.Cube_5.skeleton}
            />
            <skinnedMesh
              name="Cube_6"
              geometry={nodes.Cube_6.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Cube_6.skeleton}
            />
            <skinnedMesh
              name="Cube_7"
              geometry={nodes.Cube_7.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Cube_7.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
});

useGLTF.preload("/animals/Horse.gltf");
